ARG PYTORCH="1.9.0"
ARG CUDA="11.1"
ARG CUDNN="8"

FROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-devel

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX"
ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

# To fix GPG key error when running apt-get update
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub

RUN apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install MMCV
RUN pip install --no-cache-dir --upgrade pip wheel setuptools
RUN pip install --no-cache-dir mmcv-full==1.3.9 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.9.0/index.html

# Install MMDetection
RUN conda clean --all
RUN git clone https://github.com/open-mmlab/mmdetection.git /mmdetection
WORKDIR /mmdetection
RUN git checkout 3b72b12fe9b14de906d1363982b9fba05e7d47c1

ENV FORCE_CUDA="1"
RUN pip install --no-cache-dir -r requirements/build.txt
RUN pip install --no-cache-dir -e .

RUN pip install Flask==2.0.3
RUN pip install requests
RUN pip install orjson==3.6.7
RUN pip install pycocotools
RUN pip install timm==0.4.12

RUN pip install --no-cache-dir mmcv-full==1.3.9 -f https://download.openmmlab.com/mmcv/dist/cu${CUDA_MAJOR}${CUDA_MINOR}/torch${PYTORCH}/index.html

# Reset workdir to default
WORKDIR /

#
# BigDetection
#

RUN git https://github.com/titusss/bigdetection.git
WORKDIR /bigdetection
# RUN git checkout c3289adf62e7f82b7fa1523fea4ebdf99c0322ee

# Download htc_cbv2_swin_base COCO model
RUN wget https://big-detection.s3.us-west-2.amazonaws.com/bigdet_cpts/mmdetection_cpts/htc_cbv2_swin_base_giou_4conv1f_bigdet.pth
RUN wget https://facet-models.s3.amazonaws.com/datasets/FACSED/2022v1/FACSED.zip
RUN unzip -q FACSED.zip

RUN pip install -r requirements/build.txt
RUN pip install -e .

RUN nvcc --version
